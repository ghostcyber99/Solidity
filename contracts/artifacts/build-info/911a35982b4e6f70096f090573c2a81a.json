{
	"id": "911a35982b4e6f70096f090573c2a81a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/CoinFlipAttack.sol": {
				"content": "// SPDX-License-Identifier: MIT \n\npragma solidity ^0.8.0;\n\nimport \"./CoinFlip.sol\";\n\ncontract CoinFlipAttack {\n\n\n}"
			},
			"contracts/CoinFlip.sol": {
				"content": "// SPDX-License-Identifier: MIT \n\npragma solidity ^0.8.0;\n\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/7201e6707f6631d9499a569f492870ebdd4133cf/contracts/utils/math/SafeMath.sol\";\n\ncontract CoinFlip {\n\n    using SafeMath for uint256;\n  uint256 public consecutiveWins;\n  uint256 lastHash;\n  uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968;\n\n  constructor() public {\n    consecutiveWins = 0;\n  }\n\n  function flip(bool _guess) public returns (bool) {\n    uint256 blockValue = uint256(blockhash(block.number.sub(1)));\n\n    if (lastHash == blockValue) {\n      revert();\n    }\n\n    lastHash = blockValue;\n    uint256 coinFlip = blockValue.div(FACTOR);\n    bool side = coinFlip == 1 ? true : false;\n\n    if (side == _guess) {\n      consecutiveWins++;\n      return true;\n    } else {\n      consecutiveWins = 0;\n      return false;\n    }\n  }\n\n}"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/7201e6707f6631d9499a569f492870ebdd4133cf/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/CoinFlip.sol": {
				"CoinFlip": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "consecutiveWins",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "_guess",
									"type": "bool"
								}
							],
							"name": "flip",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CoinFlip.sol\":205:906  contract CoinFlip {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/CoinFlip.sol\":331:408  57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x8000000000000000000000000000000000000000000000000000000000000000\n    /* \"contracts/CoinFlip.sol\":314:408  uint256 FACTOR = 57896044618658097711785492504343953926634992332820282019728792003956564819968 */\n  0x02\n  sstore\n    /* \"contracts/CoinFlip.sol\":413:464  constructor() public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/CoinFlip.sol\":458:459  0 */\n  0x00\n    /* \"contracts/CoinFlip.sol\":440:455  consecutiveWins */\n  dup1\n    /* \"contracts/CoinFlip.sol\":440:459  consecutiveWins = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/CoinFlip.sol\":205:906  contract CoinFlip {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/CoinFlip.sol\":205:906  contract CoinFlip {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x1d263f67\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xe6f334d7\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/CoinFlip.sol\":468:903  function flip(bool _guess) public returns (bool) {... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CoinFlip.sol\":260:290  uint256 public consecutiveWins */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CoinFlip.sol\":468:903  function flip(bool _guess) public returns (bool) {... */\n    tag_8:\n        /* \"contracts/CoinFlip.sol\":511:515  bool */\n      0x00\n        /* \"contracts/CoinFlip.sol\":523:541  uint256 blockValue */\n      dup1\n        /* \"contracts/CoinFlip.sol\":562:581  block.number.sub(1) */\n      tag_16\n        /* \"contracts/CoinFlip.sol\":579:580  1 */\n      0x01\n        /* \"contracts/CoinFlip.sol\":562:574  block.number */\n      number\n        /* \"contracts/CoinFlip.sol\":562:578  block.number.sub */\n      tag_17\n      swap1\n        /* \"contracts/CoinFlip.sol\":562:581  block.number.sub(1) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_16:\n        /* \"contracts/CoinFlip.sol\":552:582  blockhash(block.number.sub(1)) */\n      blockhash\n        /* \"contracts/CoinFlip.sol\":544:583  uint256(blockhash(block.number.sub(1))) */\n      0x00\n      shr\n        /* \"contracts/CoinFlip.sol\":523:583  uint256 blockValue = uint256(blockhash(block.number.sub(1))) */\n      swap1\n      pop\n        /* \"contracts/CoinFlip.sol\":606:616  blockValue */\n      dup1\n        /* \"contracts/CoinFlip.sol\":594:602  lastHash */\n      sload(0x01)\n        /* \"contracts/CoinFlip.sol\":594:616  lastHash == blockValue */\n      eq\n        /* \"contracts/CoinFlip.sol\":590:641  if (lastHash == blockValue) {... */\n      iszero\n      tag_18\n      jumpi\n        /* \"contracts/CoinFlip.sol\":626:634  revert() */\n      0x00\n      dup1\n      revert\n        /* \"contracts/CoinFlip.sol\":590:641  if (lastHash == blockValue) {... */\n    tag_18:\n        /* \"contracts/CoinFlip.sol\":658:668  blockValue */\n      dup1\n        /* \"contracts/CoinFlip.sol\":647:655  lastHash */\n      0x01\n        /* \"contracts/CoinFlip.sol\":647:668  lastHash = blockValue */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CoinFlip.sol\":674:690  uint256 coinFlip */\n      0x00\n        /* \"contracts/CoinFlip.sol\":693:715  blockValue.div(FACTOR) */\n      tag_19\n        /* \"contracts/CoinFlip.sol\":708:714  FACTOR */\n      sload(0x02)\n        /* \"contracts/CoinFlip.sol\":693:703  blockValue */\n      dup4\n        /* \"contracts/CoinFlip.sol\":693:707  blockValue.div */\n      tag_20\n      swap1\n        /* \"contracts/CoinFlip.sol\":693:715  blockValue.div(FACTOR) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_19:\n        /* \"contracts/CoinFlip.sol\":674:715  uint256 coinFlip = blockValue.div(FACTOR) */\n      swap1\n      pop\n        /* \"contracts/CoinFlip.sol\":721:730  bool side */\n      0x00\n        /* \"contracts/CoinFlip.sol\":745:746  1 */\n      0x01\n        /* \"contracts/CoinFlip.sol\":733:741  coinFlip */\n      dup3\n        /* \"contracts/CoinFlip.sol\":733:746  coinFlip == 1 */\n      eq\n        /* \"contracts/CoinFlip.sol\":733:761  coinFlip == 1 ? true : false */\n      tag_21\n      jumpi\n        /* \"contracts/CoinFlip.sol\":756:761  false */\n      0x00\n        /* \"contracts/CoinFlip.sol\":733:761  coinFlip == 1 ? true : false */\n      jump(tag_22)\n    tag_21:\n        /* \"contracts/CoinFlip.sol\":749:753  true */\n      0x01\n        /* \"contracts/CoinFlip.sol\":733:761  coinFlip == 1 ? true : false */\n    tag_22:\n        /* \"contracts/CoinFlip.sol\":721:761  bool side = coinFlip == 1 ? true : false */\n      swap1\n      pop\n        /* \"contracts/CoinFlip.sol\":780:786  _guess */\n      dup5\n        /* \"contracts/CoinFlip.sol\":772:786  side == _guess */\n      iszero\n      iszero\n        /* \"contracts/CoinFlip.sol\":772:776  side */\n      dup2\n        /* \"contracts/CoinFlip.sol\":772:786  side == _guess */\n      iszero\n      iszero\n      eq\n        /* \"contracts/CoinFlip.sol\":768:899  if (side == _guess) {... */\n      iszero\n      tag_23\n      jumpi\n        /* \"contracts/CoinFlip.sol\":796:811  consecutiveWins */\n      0x00\n      dup1\n        /* \"contracts/CoinFlip.sol\":796:813  consecutiveWins++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_24\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/CoinFlip.sol\":828:832  true */\n      0x01\n        /* \"contracts/CoinFlip.sol\":821:832  return true */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_15)\n        /* \"contracts/CoinFlip.sol\":768:899  if (side == _guess) {... */\n    tag_23:\n        /* \"contracts/CoinFlip.sol\":871:872  0 */\n      0x00\n        /* \"contracts/CoinFlip.sol\":853:868  consecutiveWins */\n      dup1\n        /* \"contracts/CoinFlip.sol\":853:872  consecutiveWins = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CoinFlip.sol\":887:892  false */\n      0x00\n        /* \"contracts/CoinFlip.sol\":880:892  return false */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/CoinFlip.sol\":468:903  function flip(bool _guess) public returns (bool) {... */\n    tag_15:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/CoinFlip.sol\":260:290  uint256 public consecutiveWins */\n    tag_12:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/7201e6707f6631d9499a569f492870ebdd4133cf/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_17:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/7201e6707f6631d9499a569f492870ebdd4133cf/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/7201e6707f6631d9499a569f492870ebdd4133cf/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/7201e6707f6631d9499a569f492870ebdd4133cf/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/7201e6707f6631d9499a569f492870ebdd4133cf/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/7201e6707f6631d9499a569f492870ebdd4133cf/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/7201e6707f6631d9499a569f492870ebdd4133cf/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/7201e6707f6631d9499a569f492870ebdd4133cf/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_20:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/7201e6707f6631d9499a569f492870ebdd4133cf/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/7201e6707f6631d9499a569f492870ebdd4133cf/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/7201e6707f6631d9499a569f492870ebdd4133cf/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/7201e6707f6631d9499a569f492870ebdd4133cf/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/7201e6707f6631d9499a569f492870ebdd4133cf/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/7201e6707f6631d9499a569f492870ebdd4133cf/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:140   */\n    tag_34:\n        /* \"#utility.yul\":50:55   */\n      0x00\n        /* \"#utility.yul\":88:94   */\n      dup2\n        /* \"#utility.yul\":75:95   */\n      calldataload\n        /* \"#utility.yul\":66:95   */\n      swap1\n      pop\n        /* \"#utility.yul\":104:134   */\n      tag_36\n        /* \"#utility.yul\":128:133   */\n      dup2\n        /* \"#utility.yul\":104:134   */\n      tag_37\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":7:140   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":146:469   */\n    tag_7:\n        /* \"#utility.yul\":202:208   */\n      0x00\n        /* \"#utility.yul\":251:253   */\n      0x20\n        /* \"#utility.yul\":239:248   */\n      dup3\n        /* \"#utility.yul\":230:237   */\n      dup5\n        /* \"#utility.yul\":226:249   */\n      sub\n        /* \"#utility.yul\":222:254   */\n      slt\n        /* \"#utility.yul\":219:338   */\n      iszero\n      tag_39\n      jumpi\n        /* \"#utility.yul\":257:336   */\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":219:338   */\n    tag_39:\n        /* \"#utility.yul\":377:378   */\n      0x00\n        /* \"#utility.yul\":402:452   */\n      tag_42\n        /* \"#utility.yul\":444:451   */\n      dup5\n        /* \"#utility.yul\":435:441   */\n      dup3\n        /* \"#utility.yul\":424:433   */\n      dup6\n        /* \"#utility.yul\":420:442   */\n      add\n        /* \"#utility.yul\":402:452   */\n      tag_34\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":392:452   */\n      swap2\n      pop\n        /* \"#utility.yul\":348:462   */\n      pop\n        /* \"#utility.yul\":146:469   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":475:584   */\n    tag_43:\n        /* \"#utility.yul\":556:577   */\n      tag_45\n        /* \"#utility.yul\":571:576   */\n      dup2\n        /* \"#utility.yul\":556:577   */\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":551:554   */\n      dup3\n        /* \"#utility.yul\":544:578   */\n      mstore\n        /* \"#utility.yul\":475:584   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":590:708   */\n    tag_47:\n        /* \"#utility.yul\":677:701   */\n      tag_49\n        /* \"#utility.yul\":695:700   */\n      dup2\n        /* \"#utility.yul\":677:701   */\n      tag_50\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":672:675   */\n      dup3\n        /* \"#utility.yul\":665:702   */\n      mstore\n        /* \"#utility.yul\":590:708   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":714:924   */\n    tag_10:\n        /* \"#utility.yul\":801:805   */\n      0x00\n        /* \"#utility.yul\":839:841   */\n      0x20\n        /* \"#utility.yul\":828:837   */\n      dup3\n        /* \"#utility.yul\":824:842   */\n      add\n        /* \"#utility.yul\":816:842   */\n      swap1\n      pop\n        /* \"#utility.yul\":852:917   */\n      tag_52\n        /* \"#utility.yul\":914:915   */\n      0x00\n        /* \"#utility.yul\":903:912   */\n      dup4\n        /* \"#utility.yul\":899:916   */\n      add\n        /* \"#utility.yul\":890:896   */\n      dup5\n        /* \"#utility.yul\":852:917   */\n      tag_43\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":714:924   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":930:1152   */\n    tag_14:\n        /* \"#utility.yul\":1023:1027   */\n      0x00\n        /* \"#utility.yul\":1061:1063   */\n      0x20\n        /* \"#utility.yul\":1050:1059   */\n      dup3\n        /* \"#utility.yul\":1046:1064   */\n      add\n        /* \"#utility.yul\":1038:1064   */\n      swap1\n      pop\n        /* \"#utility.yul\":1074:1145   */\n      tag_54\n        /* \"#utility.yul\":1142:1143   */\n      0x00\n        /* \"#utility.yul\":1131:1140   */\n      dup4\n        /* \"#utility.yul\":1127:1144   */\n      add\n        /* \"#utility.yul\":1118:1124   */\n      dup5\n        /* \"#utility.yul\":1074:1145   */\n      tag_47\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":930:1152   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1239:1424   */\n    tag_32:\n        /* \"#utility.yul\":1279:1280   */\n      0x00\n        /* \"#utility.yul\":1296:1316   */\n      tag_58\n        /* \"#utility.yul\":1314:1315   */\n      dup3\n        /* \"#utility.yul\":1296:1316   */\n      tag_50\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1291:1316   */\n      swap2\n      pop\n        /* \"#utility.yul\":1330:1350   */\n      tag_59\n        /* \"#utility.yul\":1348:1349   */\n      dup4\n        /* \"#utility.yul\":1330:1350   */\n      tag_50\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1325:1350   */\n      swap3\n      pop\n        /* \"#utility.yul\":1369:1370   */\n      dup3\n        /* \"#utility.yul\":1359:1394   */\n      tag_60\n      jumpi\n        /* \"#utility.yul\":1374:1392   */\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1359:1394   */\n    tag_60:\n        /* \"#utility.yul\":1416:1417   */\n      dup3\n        /* \"#utility.yul\":1413:1414   */\n      dup3\n        /* \"#utility.yul\":1409:1418   */\n      div\n        /* \"#utility.yul\":1404:1418   */\n      swap1\n      pop\n        /* \"#utility.yul\":1239:1424   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1621   */\n    tag_29:\n        /* \"#utility.yul\":1470:1474   */\n      0x00\n        /* \"#utility.yul\":1490:1510   */\n      tag_64\n        /* \"#utility.yul\":1508:1509   */\n      dup3\n        /* \"#utility.yul\":1490:1510   */\n      tag_50\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1485:1510   */\n      swap2\n      pop\n        /* \"#utility.yul\":1524:1544   */\n      tag_65\n        /* \"#utility.yul\":1542:1543   */\n      dup4\n        /* \"#utility.yul\":1524:1544   */\n      tag_50\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":1519:1544   */\n      swap3\n      pop\n        /* \"#utility.yul\":1563:1564   */\n      dup3\n        /* \"#utility.yul\":1560:1561   */\n      dup3\n        /* \"#utility.yul\":1557:1565   */\n      lt\n        /* \"#utility.yul\":1554:1588   */\n      iszero\n      tag_66\n      jumpi\n        /* \"#utility.yul\":1568:1586   */\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":1554:1588   */\n    tag_66:\n        /* \"#utility.yul\":1613:1614   */\n      dup3\n        /* \"#utility.yul\":1610:1611   */\n      dup3\n        /* \"#utility.yul\":1606:1615   */\n      sub\n        /* \"#utility.yul\":1598:1615   */\n      swap1\n      pop\n        /* \"#utility.yul\":1430:1621   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1627:1717   */\n    tag_46:\n        /* \"#utility.yul\":1661:1668   */\n      0x00\n        /* \"#utility.yul\":1704:1709   */\n      dup2\n        /* \"#utility.yul\":1697:1710   */\n      iszero\n        /* \"#utility.yul\":1690:1711   */\n      iszero\n        /* \"#utility.yul\":1679:1711   */\n      swap1\n      pop\n        /* \"#utility.yul\":1627:1717   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1723:1800   */\n    tag_50:\n        /* \"#utility.yul\":1760:1767   */\n      0x00\n        /* \"#utility.yul\":1789:1794   */\n      dup2\n        /* \"#utility.yul\":1778:1794   */\n      swap1\n      pop\n        /* \"#utility.yul\":1723:1800   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1806:2039   */\n    tag_25:\n        /* \"#utility.yul\":1845:1848   */\n      0x00\n        /* \"#utility.yul\":1868:1892   */\n      tag_72\n        /* \"#utility.yul\":1886:1891   */\n      dup3\n        /* \"#utility.yul\":1868:1892   */\n      tag_50\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":1859:1892   */\n      swap2\n      pop\n        /* \"#utility.yul\":1914:1980   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1907:1912   */\n      dup3\n        /* \"#utility.yul\":1904:1981   */\n      eq\n        /* \"#utility.yul\":1901:2004   */\n      iszero\n      tag_73\n      jumpi\n        /* \"#utility.yul\":1984:2002   */\n      tag_74\n      tag_68\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":1901:2004   */\n    tag_73:\n        /* \"#utility.yul\":2031:2032   */\n      0x01\n        /* \"#utility.yul\":2024:2029   */\n      dup3\n        /* \"#utility.yul\":2020:2033   */\n      add\n        /* \"#utility.yul\":2013:2033   */\n      swap1\n      pop\n        /* \"#utility.yul\":1806:2039   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2045:2225   */\n    tag_68:\n        /* \"#utility.yul\":2093:2170   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2090:2091   */\n      0x00\n        /* \"#utility.yul\":2083:2171   */\n      mstore\n        /* \"#utility.yul\":2190:2194   */\n      0x11\n        /* \"#utility.yul\":2187:2188   */\n      0x04\n        /* \"#utility.yul\":2180:2195   */\n      mstore\n        /* \"#utility.yul\":2214:2218   */\n      0x24\n        /* \"#utility.yul\":2211:2212   */\n      0x00\n        /* \"#utility.yul\":2204:2219   */\n      revert\n        /* \"#utility.yul\":2231:2411   */\n    tag_62:\n        /* \"#utility.yul\":2279:2356   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2276:2277   */\n      0x00\n        /* \"#utility.yul\":2269:2357   */\n      mstore\n        /* \"#utility.yul\":2376:2380   */\n      0x12\n        /* \"#utility.yul\":2373:2374   */\n      0x04\n        /* \"#utility.yul\":2366:2381   */\n      mstore\n        /* \"#utility.yul\":2400:2404   */\n      0x24\n        /* \"#utility.yul\":2397:2398   */\n      0x00\n        /* \"#utility.yul\":2390:2405   */\n      revert\n        /* \"#utility.yul\":2540:2657   */\n    tag_41:\n        /* \"#utility.yul\":2649:2650   */\n      0x00\n        /* \"#utility.yul\":2646:2647   */\n      dup1\n        /* \"#utility.yul\":2639:2651   */\n      revert\n        /* \"#utility.yul\":2663:2779   */\n    tag_37:\n        /* \"#utility.yul\":2733:2754   */\n      tag_81\n        /* \"#utility.yul\":2748:2753   */\n      dup2\n        /* \"#utility.yul\":2733:2754   */\n      tag_46\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":2726:2731   */\n      dup2\n        /* \"#utility.yul\":2723:2755   */\n      eq\n        /* \"#utility.yul\":2713:2773   */\n      tag_82\n      jumpi\n        /* \"#utility.yul\":2769:2770   */\n      0x00\n        /* \"#utility.yul\":2766:2767   */\n      dup1\n        /* \"#utility.yul\":2759:2771   */\n      revert\n        /* \"#utility.yul\":2713:2773   */\n    tag_82:\n        /* \"#utility.yul\":2663:2779   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f8fa1674d424d2cb0f9c438b82205994b8bad0608bf1d0dbaad2a580f4cc336064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_20": {
									"entryPoint": null,
									"id": 20,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040527f800000000000000000000000000000000000000000000000000000000000000060025534801561003457600080fd5b506000808190555061036a8061004b6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631d263f671461003b578063e6f334d71461006b575b600080fd5b61005560048036038101906100509190610175565b610089565b60405161006291906101c0565b60405180910390f35b61007361012e565b60405161008091906101db565b60405180910390f35b6000806100a060014361013490919063ffffffff16565b4060001c90508060015414156100b557600080fd5b8060018190555060006100d36002548361014a90919063ffffffff16565b90506000600182146100e65760006100e9565b60015b9050841515811515141561011a5760008081548092919061010990610271565b919050555060019350505050610129565b60008081905550600093505050505b919050565b60005481565b600081836101429190610227565b905092915050565b6000818361015891906101f6565b905092915050565b60008135905061016f8161031d565b92915050565b60006020828403121561018b5761018a610318565b5b600061019984828501610160565b91505092915050565b6101ab8161025b565b82525050565b6101ba81610267565b82525050565b60006020820190506101d560008301846101a2565b92915050565b60006020820190506101f060008301846101b1565b92915050565b600061020182610267565b915061020c83610267565b92508261021c5761021b6102e9565b5b828204905092915050565b600061023282610267565b915061023d83610267565b9250828210156102505761024f6102ba565b5b828203905092915050565b60008115159050919050565b6000819050919050565b600061027c82610267565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156102af576102ae6102ba565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6103268161025b565b811461033157600080fd5b5056fea2646970667358221220f8fa1674d424d2cb0f9c438b82205994b8bad0608bf1d0dbaad2a580f4cc336064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x34 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH2 0x36A DUP1 PUSH2 0x4B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D263F67 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE6F334D7 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x175 JUMP JUMPDEST PUSH2 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x1C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0x12E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x1DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA0 PUSH1 0x1 NUMBER PUSH2 0x134 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR SWAP1 POP DUP1 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0xD3 PUSH1 0x2 SLOAD DUP4 PUSH2 0x14A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0xE6 JUMPI PUSH1 0x0 PUSH2 0xE9 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP DUP5 ISZERO ISZERO DUP2 ISZERO ISZERO EQ ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x109 SWAP1 PUSH2 0x271 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x129 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x227 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x1F6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16F DUP2 PUSH2 0x31D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18B JUMPI PUSH2 0x18A PUSH2 0x318 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x199 DUP5 DUP3 DUP6 ADD PUSH2 0x160 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AB DUP2 PUSH2 0x25B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1BA DUP2 PUSH2 0x267 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x201 DUP3 PUSH2 0x267 JUMP JUMPDEST SWAP2 POP PUSH2 0x20C DUP4 PUSH2 0x267 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x21C JUMPI PUSH2 0x21B PUSH2 0x2E9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x232 DUP3 PUSH2 0x267 JUMP JUMPDEST SWAP2 POP PUSH2 0x23D DUP4 PUSH2 0x267 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x250 JUMPI PUSH2 0x24F PUSH2 0x2BA JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27C DUP3 PUSH2 0x267 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x2AF JUMPI PUSH2 0x2AE PUSH2 0x2BA JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x326 DUP2 PUSH2 0x25B JUMP JUMPDEST DUP2 EQ PUSH2 0x331 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 STATICCALL AND PUSH21 0xD424D2CB0F9C438B82205994B8BAD0608BF1D0DBAA 0xD2 0xA5 DUP1 DELEGATECALL 0xCC CALLER PUSH1 0x64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "205:701:0:-:0;;;331:77;314:94;;413:51;;;;;;;;;;458:1;440:15;:19;;;;205:701;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@consecutiveWins_7": {
									"entryPoint": 302,
									"id": 7,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@div_312": {
									"entryPoint": 330,
									"id": 312,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@flip_86": {
									"entryPoint": 137,
									"id": 86,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@sub_282": {
									"entryPoint": 308,
									"id": 282,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 352,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 373,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 433,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 551,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 603,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 615,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 625,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 698,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 745,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 792,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 797,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2782:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "56:84:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "66:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "88:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "75:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "75:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "66:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "128:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "104:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "104:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "104:30:3"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "34:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "42:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "50:5:3",
														"type": ""
													}
												],
												"src": "7:133:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "209:260:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "255:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "257:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "257:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "257:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "230:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "239:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "226:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "226:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "251:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "222:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "222:32:3"
															},
															"nodeType": "YulIf",
															"src": "219:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "348:114:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "363:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "377:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "367:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "392:60:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "424:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "435:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "420:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "420:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "444:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "402:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "402:50:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "392:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "179:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "190:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "202:6:3",
														"type": ""
													}
												],
												"src": "146:323:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "534:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "551:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "571:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "556:14:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "556:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "544:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "522:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "529:3:3",
														"type": ""
													}
												],
												"src": "475:109:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "655:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "672:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "695:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "677:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "677:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "665:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "665:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "665:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "643:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "650:3:3",
														"type": ""
													}
												],
												"src": "590:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "806:118:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "816:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "828:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "839:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "824:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "824:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "816:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "890:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "903:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "914:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "899:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "899:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "852:37:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "852:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "852:65:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "778:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "790:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "801:4:3",
														"type": ""
													}
												],
												"src": "714:210:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1028:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1038:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1050:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1061:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1046:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1046:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1038:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1118:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1131:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1142:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1127:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1127:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1074:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1074:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1074:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1000:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1012:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1023:4:3",
														"type": ""
													}
												],
												"src": "930:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1198:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1208:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1224:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1218:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1218:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1208:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1191:6:3",
														"type": ""
													}
												],
												"src": "1158:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1281:143:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1291:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1314:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1296:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1296:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1291:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1325:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1348:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1330:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1330:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1325:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1372:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "1374:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1374:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1374:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1369:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1362:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1362:9:3"
															},
															"nodeType": "YulIf",
															"src": "1359:35:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1404:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1413:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1416:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1409:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "1404:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1270:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1273:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "1279:1:3",
														"type": ""
													}
												],
												"src": "1239:185:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1475:146:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1485:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1508:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1490:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1490:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1485:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1519:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1542:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1524:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1524:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1519:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1566:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1568:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1568:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1568:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1560:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1563:1:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1557:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1557:8:3"
															},
															"nodeType": "YulIf",
															"src": "1554:34:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1598:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1610:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1613:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1606:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1606:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "1598:4:3"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1461:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1464:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "1470:4:3",
														"type": ""
													}
												],
												"src": "1430:191:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1669:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1679:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1704:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1697:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1697:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1690:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1690:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1679:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1651:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1661:7:3",
														"type": ""
													}
												],
												"src": "1627:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1768:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1778:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1789:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1778:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1750:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1760:7:3",
														"type": ""
													}
												],
												"src": "1723:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1849:190:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1859:33:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1886:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1868:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1868:24:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1859:5:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1982:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1984:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1984:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1984:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1907:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1914:66:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1904:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1904:77:3"
															},
															"nodeType": "YulIf",
															"src": "1901:103:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2013:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2024:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2031:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2020:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2020:13:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2013:3:3"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1835:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1845:3:3",
														"type": ""
													}
												],
												"src": "1806:233:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2073:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2090:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2093:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2083:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2083:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2083:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2187:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2190:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2180:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2180:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2180:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2211:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2214:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2204:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2204:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2204:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2045:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2259:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2276:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2279:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2269:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2269:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2269:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2373:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2376:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2366:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2366:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2366:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2397:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2400:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2390:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2390:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2390:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "2231:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2506:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2523:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2526:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2516:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2516:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2516:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "2417:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2629:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2646:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2649:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2639:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2639:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2639:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "2540:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2703:76:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2757:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2766:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2769:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2759:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2759:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2759:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2726:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2748:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "2733:14:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2733:21:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2723:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2723:32:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2716:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2716:40:3"
															},
															"nodeType": "YulIf",
															"src": "2713:60:3"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2696:5:3",
														"type": ""
													}
												],
												"src": "2663:116:3"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80631d263f671461003b578063e6f334d71461006b575b600080fd5b61005560048036038101906100509190610175565b610089565b60405161006291906101c0565b60405180910390f35b61007361012e565b60405161008091906101db565b60405180910390f35b6000806100a060014361013490919063ffffffff16565b4060001c90508060015414156100b557600080fd5b8060018190555060006100d36002548361014a90919063ffffffff16565b90506000600182146100e65760006100e9565b60015b9050841515811515141561011a5760008081548092919061010990610271565b919050555060019350505050610129565b60008081905550600093505050505b919050565b60005481565b600081836101429190610227565b905092915050565b6000818361015891906101f6565b905092915050565b60008135905061016f8161031d565b92915050565b60006020828403121561018b5761018a610318565b5b600061019984828501610160565b91505092915050565b6101ab8161025b565b82525050565b6101ba81610267565b82525050565b60006020820190506101d560008301846101a2565b92915050565b60006020820190506101f060008301846101b1565b92915050565b600061020182610267565b915061020c83610267565b92508261021c5761021b6102e9565b5b828204905092915050565b600061023282610267565b915061023d83610267565b9250828210156102505761024f6102ba565b5b828203905092915050565b60008115159050919050565b6000819050919050565b600061027c82610267565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156102af576102ae6102ba565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b6103268161025b565b811461033157600080fd5b5056fea2646970667358221220f8fa1674d424d2cb0f9c438b82205994b8bad0608bf1d0dbaad2a580f4cc336064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1D263F67 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xE6F334D7 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x175 JUMP JUMPDEST PUSH2 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x1C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0x12E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x1DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xA0 PUSH1 0x1 NUMBER PUSH2 0x134 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST BLOCKHASH PUSH1 0x0 SHR SWAP1 POP DUP1 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0xD3 PUSH1 0x2 SLOAD DUP4 PUSH2 0x14A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 EQ PUSH2 0xE6 JUMPI PUSH1 0x0 PUSH2 0xE9 JUMP JUMPDEST PUSH1 0x1 JUMPDEST SWAP1 POP DUP5 ISZERO ISZERO DUP2 ISZERO ISZERO EQ ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x109 SWAP1 PUSH2 0x271 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x129 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x227 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x158 SWAP2 SWAP1 PUSH2 0x1F6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16F DUP2 PUSH2 0x31D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18B JUMPI PUSH2 0x18A PUSH2 0x318 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x199 DUP5 DUP3 DUP6 ADD PUSH2 0x160 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1AB DUP2 PUSH2 0x25B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1BA DUP2 PUSH2 0x267 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x201 DUP3 PUSH2 0x267 JUMP JUMPDEST SWAP2 POP PUSH2 0x20C DUP4 PUSH2 0x267 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x21C JUMPI PUSH2 0x21B PUSH2 0x2E9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x232 DUP3 PUSH2 0x267 JUMP JUMPDEST SWAP2 POP PUSH2 0x23D DUP4 PUSH2 0x267 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x250 JUMPI PUSH2 0x24F PUSH2 0x2BA JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27C DUP3 PUSH2 0x267 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x2AF JUMPI PUSH2 0x2AE PUSH2 0x2BA JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x326 DUP2 PUSH2 0x25B JUMP JUMPDEST DUP2 EQ PUSH2 0x331 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 STATICCALL AND PUSH21 0xD424D2CB0F9C438B82205994B8BAD0608BF1D0DBAA 0xD2 0xA5 DUP1 DELEGATECALL 0xCC CALLER PUSH1 0x64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "205:701:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;468:435;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;260:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;468:435;511:4;523:18;562:19;579:1;562:12;:16;;:19;;;;:::i;:::-;552:30;544:39;;523:60;;606:10;594:8;;:22;590:51;;;626:8;;;590:51;658:10;647:8;:21;;;;674:16;693:22;708:6;;693:10;:14;;:22;;;;:::i;:::-;674:41;;721:9;745:1;733:8;:13;:28;;756:5;733:28;;;749:4;733:28;721:40;;780:6;772:14;;:4;:14;;;768:131;;;796:15;;:17;;;;;;;;;:::i;:::-;;;;;;828:4;821:11;;;;;;;768:131;871:1;853:15;:19;;;;887:5;880:12;;;;;468:435;;;;:::o;260:30::-;;;;:::o;3122:96:2:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;7:133:3:-;50:5;88:6;75:20;66:29;;104:30;128:5;104:30;:::i;:::-;7:133;;;;:::o;146:323::-;202:6;251:2;239:9;230:7;226:23;222:32;219:119;;;257:79;;:::i;:::-;219:119;377:1;402:50;444:7;435:6;424:9;420:22;402:50;:::i;:::-;392:60;;348:114;146:323;;;;:::o;475:109::-;556:21;571:5;556:21;:::i;:::-;551:3;544:34;475:109;;:::o;590:118::-;677:24;695:5;677:24;:::i;:::-;672:3;665:37;590:118;;:::o;714:210::-;801:4;839:2;828:9;824:18;816:26;;852:65;914:1;903:9;899:17;890:6;852:65;:::i;:::-;714:210;;;;:::o;930:222::-;1023:4;1061:2;1050:9;1046:18;1038:26;;1074:71;1142:1;1131:9;1127:17;1118:6;1074:71;:::i;:::-;930:222;;;;:::o;1239:185::-;1279:1;1296:20;1314:1;1296:20;:::i;:::-;1291:25;;1330:20;1348:1;1330:20;:::i;:::-;1325:25;;1369:1;1359:35;;1374:18;;:::i;:::-;1359:35;1416:1;1413;1409:9;1404:14;;1239:185;;;;:::o;1430:191::-;1470:4;1490:20;1508:1;1490:20;:::i;:::-;1485:25;;1524:20;1542:1;1524:20;:::i;:::-;1519:25;;1563:1;1560;1557:8;1554:34;;;1568:18;;:::i;:::-;1554:34;1613:1;1610;1606:9;1598:17;;1430:191;;;;:::o;1627:90::-;1661:7;1704:5;1697:13;1690:21;1679:32;;1627:90;;;:::o;1723:77::-;1760:7;1789:5;1778:16;;1723:77;;;:::o;1806:233::-;1845:3;1868:24;1886:5;1868:24;:::i;:::-;1859:33;;1914:66;1907:5;1904:77;1901:103;;;1984:18;;:::i;:::-;1901:103;2031:1;2024:5;2020:13;2013:20;;1806:233;;;:::o;2045:180::-;2093:77;2090:1;2083:88;2190:4;2187:1;2180:15;2214:4;2211:1;2204:15;2231:180;2279:77;2276:1;2269:88;2376:4;2373:1;2366:15;2400:4;2397:1;2390:15;2540:117;2649:1;2646;2639:12;2663:116;2733:21;2748:5;2733:21;:::i;:::-;2726:5;2723:32;2713:60;;2769:1;2766;2759:12;2713:60;2663:116;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "174800",
								"executionCost": "27340",
								"totalCost": "202140"
							},
							"external": {
								"consecutiveWins()": "2429",
								"flip(bool)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 205,
									"end": 906,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 205,
									"end": 906,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 205,
									"end": 906,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 331,
									"end": 408,
									"name": "PUSH",
									"source": 0,
									"value": "8000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 314,
									"end": 408,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 314,
									"end": 408,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 413,
									"end": 464,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 413,
									"end": 464,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 413,
									"end": 464,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 413,
									"end": 464,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 413,
									"end": 464,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 413,
									"end": 464,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 413,
									"end": 464,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 413,
									"end": 464,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 413,
									"end": 464,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 413,
									"end": 464,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 413,
									"end": 464,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 458,
									"end": 459,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 455,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 440,
									"end": 459,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 440,
									"end": 459,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 440,
									"end": 459,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 440,
									"end": 459,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 205,
									"end": 906,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 205,
									"end": 906,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 205,
									"end": 906,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 205,
									"end": 906,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 906,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 205,
									"end": 906,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 906,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f8fa1674d424d2cb0f9c438b82205994b8bad0608bf1d0dbaad2a580f4cc336064736f6c63430008070033",
									".code": [
										{
											"begin": 205,
											"end": 906,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 205,
											"end": 906,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 205,
											"end": 906,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 205,
											"end": 906,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 205,
											"end": 906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 205,
											"end": 906,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 205,
											"end": 906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 205,
											"end": 906,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 205,
											"end": 906,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 205,
											"end": 906,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 205,
											"end": 906,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 205,
											"end": 906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 205,
											"end": 906,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 205,
											"end": 906,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 205,
											"end": 906,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 205,
											"end": 906,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 205,
											"end": 906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 205,
											"end": 906,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 205,
											"end": 906,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 906,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 205,
											"end": 906,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 205,
											"end": 906,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 205,
											"end": 906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 205,
											"end": 906,
											"name": "PUSH",
											"source": 0,
											"value": "1D263F67"
										},
										{
											"begin": 205,
											"end": 906,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 205,
											"end": 906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 205,
											"end": 906,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 205,
											"end": 906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 205,
											"end": 906,
											"name": "PUSH",
											"source": 0,
											"value": "E6F334D7"
										},
										{
											"begin": 205,
											"end": 906,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 205,
											"end": 906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 205,
											"end": 906,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 205,
											"end": 906,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 205,
											"end": 906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 205,
											"end": 906,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 205,
											"end": 906,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 468,
											"end": 903,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 468,
											"end": 903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 468,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 468,
											"end": 903,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 468,
											"end": 903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 468,
											"end": 903,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 468,
											"end": 903,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 468,
											"end": 903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 468,
											"end": 903,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 468,
											"end": 903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 468,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 468,
											"end": 903,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 468,
											"end": 903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 468,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 468,
											"end": 903,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 468,
											"end": 903,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 468,
											"end": 903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 468,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 468,
											"end": 903,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 468,
											"end": 903,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 468,
											"end": 903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 468,
											"end": 903,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 468,
											"end": 903,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 468,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 468,
											"end": 903,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 468,
											"end": 903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 468,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 468,
											"end": 903,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 468,
											"end": 903,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 468,
											"end": 903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 468,
											"end": 903,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 468,
											"end": 903,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 468,
											"end": 903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 468,
											"end": 903,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 468,
											"end": 903,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 468,
											"end": 903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 468,
											"end": 903,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 260,
											"end": 290,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 260,
											"end": 290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 260,
											"end": 290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 260,
											"end": 290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 260,
											"end": 290,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 260,
											"end": 290,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 260,
											"end": 290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 260,
											"end": 290,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 260,
											"end": 290,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 260,
											"end": 290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 260,
											"end": 290,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 260,
											"end": 290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 260,
											"end": 290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 260,
											"end": 290,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 260,
											"end": 290,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 260,
											"end": 290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 260,
											"end": 290,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 260,
											"end": 290,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 260,
											"end": 290,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 260,
											"end": 290,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 260,
											"end": 290,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 260,
											"end": 290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 260,
											"end": 290,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 468,
											"end": 903,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 468,
											"end": 903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 511,
											"end": 515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 523,
											"end": 541,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 562,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 579,
											"end": 580,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 562,
											"end": 574,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 562,
											"end": 578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 562,
											"end": 578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 562,
											"end": 581,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 562,
											"end": 581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 562,
											"end": 581,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 562,
											"end": 581,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 562,
											"end": 581,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 562,
											"end": 581,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 562,
											"end": 581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 552,
											"end": 582,
											"name": "BLOCKHASH",
											"source": 0
										},
										{
											"begin": 544,
											"end": 583,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 544,
											"end": 583,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 523,
											"end": 583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 523,
											"end": 583,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 606,
											"end": 616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 594,
											"end": 602,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 594,
											"end": 602,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 594,
											"end": 616,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 590,
											"end": 641,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 590,
											"end": 641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 590,
											"end": 641,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 626,
											"end": 634,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 626,
											"end": 634,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 626,
											"end": 634,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 590,
											"end": 641,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 590,
											"end": 641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 658,
											"end": 668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 647,
											"end": 655,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 647,
											"end": 668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 647,
											"end": 668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 647,
											"end": 668,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 647,
											"end": 668,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 674,
											"end": 690,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 693,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 708,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 708,
											"end": 714,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 693,
											"end": 703,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 693,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 693,
											"end": 707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 693,
											"end": 715,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 693,
											"end": 715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 693,
											"end": 715,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 693,
											"end": 715,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 693,
											"end": 715,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 693,
											"end": 715,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 693,
											"end": 715,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 674,
											"end": 715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 674,
											"end": 715,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 721,
											"end": 730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 745,
											"end": 746,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 733,
											"end": 741,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 733,
											"end": 746,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 733,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 733,
											"end": 761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 756,
											"end": 761,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 733,
											"end": 761,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 733,
											"end": 761,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 733,
											"end": 761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 749,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 733,
											"end": 761,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 733,
											"end": 761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 721,
											"end": 761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 721,
											"end": 761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 772,
											"end": 786,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 772,
											"end": 786,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 772,
											"end": 776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 772,
											"end": 786,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 772,
											"end": 786,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 772,
											"end": 786,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 768,
											"end": 899,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 768,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 768,
											"end": 899,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 796,
											"end": 811,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 796,
											"end": 811,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 796,
											"end": 813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 796,
											"end": 813,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 796,
											"end": 813,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 796,
											"end": 813,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 796,
											"end": 813,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 796,
											"end": 813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 796,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 796,
											"end": 813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 796,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 796,
											"end": 813,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 796,
											"end": 813,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 796,
											"end": 813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 796,
											"end": 813,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 796,
											"end": 813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 796,
											"end": 813,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 796,
											"end": 813,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 796,
											"end": 813,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 828,
											"end": 832,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 821,
											"end": 832,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 821,
											"end": 832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 821,
											"end": 832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 821,
											"end": 832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 821,
											"end": 832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 821,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 821,
											"end": 832,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 768,
											"end": 899,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 768,
											"end": 899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 871,
											"end": 872,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 853,
											"end": 868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 853,
											"end": 872,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 853,
											"end": 872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 853,
											"end": 872,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 853,
											"end": 872,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 887,
											"end": 892,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 892,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 880,
											"end": 892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 880,
											"end": 892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 880,
											"end": 892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 880,
											"end": 892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 468,
											"end": 903,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 468,
											"end": 903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 468,
											"end": 903,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 468,
											"end": 903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 468,
											"end": 903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 468,
											"end": 903,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 260,
											"end": 290,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 260,
											"end": 290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 260,
											"end": 290,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 290,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 260,
											"end": 290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 260,
											"end": 290,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 140,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 7,
											"end": 140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 50,
											"end": 55,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 88,
											"end": 94,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 75,
											"end": 95,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 66,
											"end": 95,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 66,
											"end": 95,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 104,
											"end": 134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 128,
											"end": 133,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 104,
											"end": 134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 104,
											"end": 134,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 104,
											"end": 134,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 104,
											"end": 134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7,
											"end": 140,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7,
											"end": 140,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 140,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 146,
											"end": 469,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 146,
											"end": 469,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 202,
											"end": 208,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 253,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 239,
											"end": 248,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 230,
											"end": 237,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 226,
											"end": 249,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 222,
											"end": 254,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 219,
											"end": 338,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 219,
											"end": 338,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 219,
											"end": 338,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 257,
											"end": 336,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 257,
											"end": 336,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 257,
											"end": 336,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 257,
											"end": 336,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 257,
											"end": 336,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 219,
											"end": 338,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 219,
											"end": 338,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 377,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 402,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 444,
											"end": 451,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 435,
											"end": 441,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 424,
											"end": 433,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 420,
											"end": 442,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 402,
											"end": 452,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 402,
											"end": 452,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 402,
											"end": 452,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 402,
											"end": 452,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 392,
											"end": 452,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 392,
											"end": 452,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 348,
											"end": 462,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 146,
											"end": 469,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 146,
											"end": 469,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 146,
											"end": 469,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 146,
											"end": 469,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 146,
											"end": 469,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 475,
											"end": 584,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 475,
											"end": 584,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 556,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 556,
											"end": 577,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 556,
											"end": 577,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 556,
											"end": 577,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 556,
											"end": 577,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 551,
											"end": 554,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 544,
											"end": 578,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 475,
											"end": 584,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 475,
											"end": 584,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 475,
											"end": 584,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 590,
											"end": 708,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 590,
											"end": 708,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 677,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 695,
											"end": 700,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 677,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 677,
											"end": 701,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 677,
											"end": 701,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 677,
											"end": 701,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 672,
											"end": 675,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 665,
											"end": 702,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 590,
											"end": 708,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 590,
											"end": 708,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 590,
											"end": 708,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 714,
											"end": 924,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 714,
											"end": 924,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 801,
											"end": 805,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 839,
											"end": 841,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 828,
											"end": 837,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 824,
											"end": 842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 816,
											"end": 842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 816,
											"end": 842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 852,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 914,
											"end": 915,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 903,
											"end": 912,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 899,
											"end": 916,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 890,
											"end": 896,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 852,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 852,
											"end": 917,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 852,
											"end": 917,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 852,
											"end": 917,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 714,
											"end": 924,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 714,
											"end": 924,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 714,
											"end": 924,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 714,
											"end": 924,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 714,
											"end": 924,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 930,
											"end": 1152,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 930,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1023,
											"end": 1027,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1061,
											"end": 1063,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1050,
											"end": 1059,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1064,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1064,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1038,
											"end": 1064,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1074,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1142,
											"end": 1143,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1131,
											"end": 1140,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1127,
											"end": 1144,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1118,
											"end": 1124,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1074,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1074,
											"end": 1145,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1074,
											"end": 1145,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1074,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 930,
											"end": 1152,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 930,
											"end": 1152,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 930,
											"end": 1152,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 930,
											"end": 1152,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 930,
											"end": 1152,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1239,
											"end": 1424,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1239,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1279,
											"end": 1280,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1296,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1314,
											"end": 1315,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1296,
											"end": 1316,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1296,
											"end": 1316,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 1296,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1291,
											"end": 1316,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1291,
											"end": 1316,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1330,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1348,
											"end": 1349,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1330,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1330,
											"end": 1350,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1330,
											"end": 1350,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1330,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1350,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1325,
											"end": 1350,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1369,
											"end": 1370,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1394,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1359,
											"end": 1394,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1374,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1374,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1374,
											"end": 1392,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1374,
											"end": 1392,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1374,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1359,
											"end": 1394,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1359,
											"end": 1394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1416,
											"end": 1417,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1413,
											"end": 1414,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1409,
											"end": 1418,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1404,
											"end": 1418,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1404,
											"end": 1418,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1424,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1424,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1424,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1424,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1239,
											"end": 1424,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1430,
											"end": 1621,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1430,
											"end": 1621,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1470,
											"end": 1474,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1490,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1508,
											"end": 1509,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1490,
											"end": 1510,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1490,
											"end": 1510,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1490,
											"end": 1510,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1490,
											"end": 1510,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1510,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1485,
											"end": 1510,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1542,
											"end": 1543,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1524,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1524,
											"end": 1544,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1524,
											"end": 1544,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1524,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1519,
											"end": 1544,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1519,
											"end": 1544,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1563,
											"end": 1564,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1560,
											"end": 1561,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1557,
											"end": 1565,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1554,
											"end": 1588,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1554,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1554,
											"end": 1588,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 1568,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1554,
											"end": 1588,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 1554,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1613,
											"end": 1614,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1611,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1606,
											"end": 1615,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1598,
											"end": 1615,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1598,
											"end": 1615,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1430,
											"end": 1621,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1430,
											"end": 1621,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1430,
											"end": 1621,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1430,
											"end": 1621,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1430,
											"end": 1621,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1627,
											"end": 1717,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1627,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1661,
											"end": 1668,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1704,
											"end": 1709,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1697,
											"end": 1710,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1690,
											"end": 1711,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1679,
											"end": 1711,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1679,
											"end": 1711,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1627,
											"end": 1717,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1627,
											"end": 1717,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1627,
											"end": 1717,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1627,
											"end": 1717,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1723,
											"end": 1800,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1723,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1767,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1789,
											"end": 1794,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1778,
											"end": 1794,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1778,
											"end": 1794,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1723,
											"end": 1800,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1723,
											"end": 1800,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1723,
											"end": 1800,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1723,
											"end": 1800,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1806,
											"end": 2039,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1806,
											"end": 2039,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1845,
											"end": 1848,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1868,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1886,
											"end": 1891,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1868,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1868,
											"end": 1892,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1868,
											"end": 1892,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1868,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1859,
											"end": 1892,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1859,
											"end": 1892,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1914,
											"end": 1980,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1907,
											"end": 1912,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1904,
											"end": 1981,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 2004,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 2004,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1901,
											"end": 2004,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1984,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1984,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 1984,
											"end": 2002,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1984,
											"end": 2002,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1984,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 2004,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1901,
											"end": 2004,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2031,
											"end": 2032,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2024,
											"end": 2029,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2020,
											"end": 2033,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2013,
											"end": 2033,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2013,
											"end": 2033,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1806,
											"end": 2039,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1806,
											"end": 2039,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1806,
											"end": 2039,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1806,
											"end": 2039,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2045,
											"end": 2225,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2045,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2093,
											"end": 2170,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2090,
											"end": 2091,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2083,
											"end": 2171,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2190,
											"end": 2194,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2187,
											"end": 2188,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2180,
											"end": 2195,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2214,
											"end": 2218,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2211,
											"end": 2212,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2204,
											"end": 2219,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2231,
											"end": 2411,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2231,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2279,
											"end": 2356,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2276,
											"end": 2277,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2269,
											"end": 2357,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2376,
											"end": 2380,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2373,
											"end": 2374,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2366,
											"end": 2381,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2400,
											"end": 2404,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2397,
											"end": 2398,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2390,
											"end": 2405,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2540,
											"end": 2657,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2540,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2649,
											"end": 2650,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2646,
											"end": 2647,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2639,
											"end": 2651,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2779,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 2663,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2733,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2748,
											"end": 2753,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2733,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2733,
											"end": 2754,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2733,
											"end": 2754,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2733,
											"end": 2754,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 2731,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2723,
											"end": 2755,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2713,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2713,
											"end": 2773,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2769,
											"end": 2770,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2766,
											"end": 2767,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2759,
											"end": 2771,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2713,
											"end": 2773,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2713,
											"end": 2773,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2779,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2663,
											"end": 2779,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"consecutiveWins()": "e6f334d7",
							"flip(bool)": "1d263f67"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"consecutiveWins\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_guess\",\"type\":\"bool\"}],\"name\":\"flip\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CoinFlip.sol\":\"CoinFlip\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CoinFlip.sol\":{\"keccak256\":\"0x956f7edf8611d0d1939779e0a4d1a05e1050bb029cbd07390de486577815e4d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce49c5fa72a28cb331d4ef39378e0ae2de85338ad4d9e7d2b68be55a927cab6d\",\"dweb:/ipfs/QmWU6Hnx5S4kWd7Dw5ySCxjp1DeLjCK7P3BMQC8h8evmhr\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/7201e6707f6631d9499a569f492870ebdd4133cf/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/CoinFlip.sol:CoinFlip",
								"label": "consecutiveWins",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 9,
								"contract": "contracts/CoinFlip.sol:CoinFlip",
								"label": "lastHash",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 12,
								"contract": "contracts/CoinFlip.sol:CoinFlip",
								"label": "FACTOR",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/CoinFlipAttack.sol": {
				"CoinFlipAttack": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CoinFlipAttack.sol\":85:114  contract CoinFlipAttack {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/CoinFlipAttack.sol\":85:114  contract CoinFlipAttack {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208447b31d6a8d95661c27674c8335c8730abb47aa39c850484c17d723f17c407664736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212208447b31d6a8d95661c27674c8335c8730abb47aa39c850484c17d723f17c407664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 SELFBALANCE 0xB3 SAR PUSH11 0x8D95661C27674C8335C873 EXP 0xBB SELFBALANCE 0xAA CODECOPY 0xC8 POP BASEFEE 0x4C OR 0xD7 0x23 CALL PUSH29 0x407664736F6C6343000807003300000000000000000000000000000000 ",
							"sourceMap": "85:29:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212208447b31d6a8d95661c27674c8335c8730abb47aa39c850484c17d723f17c407664736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 SELFBALANCE 0xB3 SAR PUSH11 0x8D95661C27674C8335C873 EXP 0xBB SELFBALANCE 0xAA CODECOPY 0xC8 POP BASEFEE 0x4C OR 0xD7 0x23 CALL PUSH29 0x407664736F6C6343000807003300000000000000000000000000000000 ",
							"sourceMap": "85:29:1:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 85,
									"end": 114,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 85,
									"end": 114,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 85,
									"end": 114,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 85,
									"end": 114,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 85,
									"end": 114,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 85,
									"end": 114,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 85,
									"end": 114,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 85,
									"end": 114,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 85,
									"end": 114,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 85,
									"end": 114,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 85,
									"end": 114,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 85,
									"end": 114,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 85,
									"end": 114,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 85,
									"end": 114,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 85,
									"end": 114,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 85,
									"end": 114,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 85,
									"end": 114,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 85,
									"end": 114,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 85,
									"end": 114,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 85,
									"end": 114,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 85,
									"end": 114,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208447b31d6a8d95661c27674c8335c8730abb47aa39c850484c17d723f17c407664736f6c63430008070033",
									".code": [
										{
											"begin": 85,
											"end": 114,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 85,
											"end": 114,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 85,
											"end": 114,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 85,
											"end": 114,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 85,
											"end": 114,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 85,
											"end": 114,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CoinFlipAttack.sol\":\"CoinFlipAttack\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/CoinFlip.sol\":{\"keccak256\":\"0x956f7edf8611d0d1939779e0a4d1a05e1050bb029cbd07390de486577815e4d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce49c5fa72a28cb331d4ef39378e0ae2de85338ad4d9e7d2b68be55a927cab6d\",\"dweb:/ipfs/QmWU6Hnx5S4kWd7Dw5ySCxjp1DeLjCK7P3BMQC8h8evmhr\"]},\"contracts/CoinFlipAttack.sol\":{\"keccak256\":\"0x67d5e70833de4a34c3ed4f1eac824c537ff1367424fc7e844450dff0eb8ed5df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea9e1c9ab66e2951bd7e2eaf76ece64ecec56e7898134aa2001e0e8bbdde227c\",\"dweb:/ipfs/QmVSsRFyu9ZycJ8XCX38HQUDfkYmuvdobiH1t6uW2H8ZGh\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/7201e6707f6631d9499a569f492870ebdd4133cf/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/7201e6707f6631d9499a569f492870ebdd4133cf/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/7201e6707f6631d9499a569f492870ebdd4133cf/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/7201e6707f6631d9499a569f492870ebdd4133cf/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209ae9f9b7c07bf28e7dbd48675ee828280cc6ad4794ae38b7893910478573ec1264736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209ae9f9b7c07bf28e7dbd48675ee828280cc6ad4794ae38b7893910478573ec1264736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 0xE9 0xF9 0xB7 0xC0 PUSH28 0xF28E7DBD48675EE828280CC6AD4794AE38B7893910478573EC126473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "482:6300:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209ae9f9b7c07bf28e7dbd48675ee828280cc6ad4794ae38b7893910478573ec1264736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 0xE9 0xF9 0xB7 0xC0 PUSH28 0xF28E7DBD48675EE828280CC6AD4794AE38B7893910478573EC126473 PUSH16 0x6C634300080700330000000000000000 ",
							"sourceMap": "482:6300:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209ae9f9b7c07bf28e7dbd48675ee828280cc6ad4794ae38b7893910478573ec1264736f6c63430008070033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/7201e6707f6631d9499a569f492870ebdd4133cf/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/7201e6707f6631d9499a569f492870ebdd4133cf/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> contracts/CoinFlip.sol:14:3:\n   |\n14 |   constructor() public {\n   |   ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 464,
					"file": "contracts/CoinFlip.sol",
					"start": 413
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/CoinFlip.sol": {
				"ast": {
					"absolutePath": "contracts/CoinFlip.sol",
					"exportedSymbols": {
						"CoinFlip": [
							87
						],
						"SafeMath": [
							403
						]
					},
					"id": 88,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "34:23:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/7201e6707f6631d9499a569f492870ebdd4133cf/contracts/utils/math/SafeMath.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/7201e6707f6631d9499a569f492870ebdd4133cf/contracts/utils/math/SafeMath.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 88,
							"sourceUnit": 404,
							"src": "59:144:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 87,
							"linearizedBaseContracts": [
								87
							],
							"name": "CoinFlip",
							"nameLocation": "214:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 5,
									"libraryName": {
										"id": 3,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 403,
										"src": "236:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "230:27:0",
									"typeName": {
										"id": 4,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "249:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "e6f334d7",
									"id": 7,
									"mutability": "mutable",
									"name": "consecutiveWins",
									"nameLocation": "275:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 87,
									"src": "260:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "260:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 9,
									"mutability": "mutable",
									"name": "lastHash",
									"nameLocation": "302:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 87,
									"src": "294:16:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 8,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "294:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 12,
									"mutability": "mutable",
									"name": "FACTOR",
									"nameLocation": "322:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 87,
									"src": "314:94:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 10,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "314:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3537383936303434363138363538303937373131373835343932353034333433393533393236363334393932333332383230323832303139373238373932303033393536353634383139393638",
										"id": 11,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "331:77:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
											"typeString": "int_const 5789...(69 digits omitted)...9968"
										},
										"value": "57896044618658097711785492504343953926634992332820282019728792003956564819968"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "434:30:0",
										"statements": [
											{
												"expression": {
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 15,
														"name": "consecutiveWins",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "440:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 16,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "458:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "440:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 18,
												"nodeType": "ExpressionStatement",
												"src": "440:19:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "424:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:0:0"
									},
									"scope": 87,
									"src": "413:51:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 85,
										"nodeType": "Block",
										"src": "517:386:0",
										"statements": [
											{
												"assignments": [
													28
												],
												"declarations": [
													{
														"constant": false,
														"id": 28,
														"mutability": "mutable",
														"name": "blockValue",
														"nameLocation": "531:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 85,
														"src": "523:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 27,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "523:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 39,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "31",
																			"id": 35,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "579:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 32,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "562:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 33,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "number",
																			"nodeType": "MemberAccess",
																			"src": "562:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 34,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 282,
																		"src": "562:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 36,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "562:19:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 31,
																"name": "blockhash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967291,
																"src": "552:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (uint256) view returns (bytes32)"
																}
															},
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "552:30:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 30,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "544:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 29,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "544:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "544:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "523:60:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 40,
														"name": "lastHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "594:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 41,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "606:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "594:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 47,
												"nodeType": "IfStatement",
												"src": "590:51:0",
												"trueBody": {
													"id": 46,
													"nodeType": "Block",
													"src": "618:23:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 43,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "626:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 44,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "626:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 45,
															"nodeType": "ExpressionStatement",
															"src": "626:8:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 48,
														"name": "lastHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "647:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 49,
														"name": "blockValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "658:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "647:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "647:21:0"
											},
											{
												"assignments": [
													53
												],
												"declarations": [
													{
														"constant": false,
														"id": 53,
														"mutability": "mutable",
														"name": "coinFlip",
														"nameLocation": "682:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 85,
														"src": "674:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 52,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "674:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 58,
												"initialValue": {
													"arguments": [
														{
															"id": 56,
															"name": "FACTOR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "708:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 54,
															"name": "blockValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "693:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 55,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 312,
														"src": "693:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "693:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "674:41:0"
											},
											{
												"assignments": [
													60
												],
												"declarations": [
													{
														"constant": false,
														"id": 60,
														"mutability": "mutable",
														"name": "side",
														"nameLocation": "726:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 85,
														"src": "721:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 59,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "721:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 67,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 63,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 61,
															"name": "coinFlip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "733:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "745:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "733:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "66616c7365",
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "756:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "733:28:0",
													"trueExpression": {
														"hexValue": "74727565",
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "749:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "721:40:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 68,
														"name": "side",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "772:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 69,
														"name": "_guess",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "780:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "772:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 83,
													"nodeType": "Block",
													"src": "845:54:0",
													"statements": [
														{
															"expression": {
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 77,
																	"name": "consecutiveWins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "853:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 78,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "871:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "853:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 80,
															"nodeType": "ExpressionStatement",
															"src": "853:19:0"
														},
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "887:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 26,
															"id": 82,
															"nodeType": "Return",
															"src": "880:12:0"
														}
													]
												},
												"id": 84,
												"nodeType": "IfStatement",
												"src": "768:131:0",
												"trueBody": {
													"id": 76,
													"nodeType": "Block",
													"src": "788:51:0",
													"statements": [
														{
															"expression": {
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "796:17:0",
																"subExpression": {
																	"id": 71,
																	"name": "consecutiveWins",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "796:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 73,
															"nodeType": "ExpressionStatement",
															"src": "796:17:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 74,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "828:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 26,
															"id": 75,
															"nodeType": "Return",
															"src": "821:11:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "1d263f67",
									"id": 86,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "flip",
									"nameLocation": "477:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "_guess",
												"nameLocation": "487:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "482:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 21,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "482:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "481:13:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "511:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 24,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "511:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "510:6:0"
									},
									"scope": 87,
									"src": "468:435:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 88,
							"src": "205:701:0",
							"usedErrors": []
						}
					],
					"src": "34:872:0"
				},
				"id": 0
			},
			"contracts/CoinFlipAttack.sol": {
				"ast": {
					"absolutePath": "contracts/CoinFlipAttack.sol",
					"exportedSymbols": {
						"CoinFlip": [
							87
						],
						"CoinFlipAttack": [
							91
						],
						"SafeMath": [
							403
						]
					},
					"id": 92,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 89,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "34:23:1"
						},
						{
							"absolutePath": "contracts/CoinFlip.sol",
							"file": "./CoinFlip.sol",
							"id": 90,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 92,
							"sourceUnit": 88,
							"src": "59:24:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 91,
							"linearizedBaseContracts": [
								91
							],
							"name": "CoinFlipAttack",
							"nameLocation": "94:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 92,
							"src": "85:29:1",
							"usedErrors": []
						}
					],
					"src": "34:80:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/7201e6707f6631d9499a569f492870ebdd4133cf/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/7201e6707f6631d9499a569f492870ebdd4133cf/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							403
						]
					},
					"id": 404,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 93,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 94,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:2",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 403,
							"linearizedBaseContracts": [
								403
							],
							"name": "SafeMath",
							"nameLocation": "490:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "717:140:2",
										"statements": [
											{
												"id": 124,
												"nodeType": "UncheckedBlock",
												"src": "727:124:2",
												"statements": [
													{
														"assignments": [
															107
														],
														"declarations": [
															{
																"constant": false,
																"id": 107,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 124,
																"src": "751:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 106,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 111,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 108,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "763:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 109,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "767:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 112,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 107,
																"src": "786:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 113,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "790:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 119,
														"nodeType": "IfStatement",
														"src": "782:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 117,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 105,
															"id": 118,
															"nodeType": "Return",
															"src": "793:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 121,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 107,
																	"src": "838:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 122,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 105,
														"id": 123,
														"nodeType": "Return",
														"src": "824:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:2",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "657:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "668:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:2"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "702:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 101,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "708:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:2"
									},
									"scope": 403,
									"src": "641:216:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "1078:113:2",
										"statements": [
											{
												"id": 152,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 138,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 131,
																"src": "1116:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 139,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "1120:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 145,
														"nodeType": "IfStatement",
														"src": "1112:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 141,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 143,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 137,
															"id": 144,
															"nodeType": "Return",
															"src": "1123:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 147,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 129,
																		"src": "1168:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 148,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 131,
																		"src": "1172:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 150,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 137,
														"id": 151,
														"nodeType": "Return",
														"src": "1154:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:2",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "1018:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "1029:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:2"
									},
									"returnParameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "1063:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 133,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "1069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:2"
									},
									"scope": 403,
									"src": "1002:189:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 195,
										"nodeType": "Block",
										"src": "1415:417:2",
										"statements": [
											{
												"id": 194,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 166,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 157,
																"src": "1683:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 167,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 173,
														"nodeType": "IfStatement",
														"src": "1679:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 169,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 171,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 165,
															"id": 172,
															"nodeType": "Return",
															"src": "1691:16:2"
														}
													},
													{
														"assignments": [
															175
														],
														"declarations": [
															{
																"constant": false,
																"id": 175,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 194,
																"src": "1721:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 174,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 179,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 176,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 157,
																"src": "1733:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 177,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 159,
																"src": "1737:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 182,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 180,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 175,
																	"src": "1756:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 181,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 157,
																	"src": "1760:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 183,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 159,
																"src": "1765:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 189,
														"nodeType": "IfStatement",
														"src": "1752:33:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 186,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 187,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 165,
															"id": 188,
															"nodeType": "Return",
															"src": "1768:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 191,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 175,
																	"src": "1813:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 192,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 165,
														"id": 193,
														"nodeType": "Return",
														"src": "1799:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:2",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "1355:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "1366:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:2"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "1400:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 161,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "1406:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:2"
									},
									"scope": 403,
									"src": "1339:493:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2057:114:2",
										"statements": [
											{
												"id": 222,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 208,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 201,
																"src": "2095:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 209,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 215,
														"nodeType": "IfStatement",
														"src": "2091:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 213,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 207,
															"id": 214,
															"nodeType": "Return",
															"src": "2103:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 217,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 199,
																		"src": "2148:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 218,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 201,
																		"src": "2152:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 220,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 207,
														"id": 221,
														"nodeType": "Return",
														"src": "2134:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:2",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "1997:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2008:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:2"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2042:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2048:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:2"
									},
									"scope": 403,
									"src": "1981:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "2406:114:2",
										"statements": [
											{
												"id": 250,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 236,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 229,
																"src": "2444:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 237,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 243,
														"nodeType": "IfStatement",
														"src": "2440:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 239,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 241,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 235,
															"id": 242,
															"nodeType": "Return",
															"src": "2452:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 247,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 245,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 227,
																		"src": "2497:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 246,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 229,
																		"src": "2501:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 248,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 235,
														"id": 249,
														"nodeType": "Return",
														"src": "2483:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "2346:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "2357:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:2"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "2391:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 231,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "2397:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:2"
									},
									"scope": 403,
									"src": "2330:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "2822:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 262,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 255,
														"src": "2839:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 263,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "2843:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 261,
												"id": 265,
												"nodeType": "Return",
												"src": "2832:12:2"
											}
										]
									},
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:2",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "2768:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "2779:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:2"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "2813:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:2"
									},
									"scope": 403,
									"src": "2755:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "3189:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 277,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 270,
														"src": "3206:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 278,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "3210:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 276,
												"id": 280,
												"nodeType": "Return",
												"src": "3199:12:2"
											}
										]
									},
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "3135:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "3146:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:2"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "3180:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:2"
									},
									"scope": 403,
									"src": "3122:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "3532:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 292,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 285,
														"src": "3549:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 293,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "3553:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 291,
												"id": 295,
												"nodeType": "Return",
												"src": "3542:12:2"
											}
										]
									},
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:2",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "3478:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "3489:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:2"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "3523:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:2"
									},
									"scope": 403,
									"src": "3465:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "3917:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 307,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "3934:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 308,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "3938:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 306,
												"id": 310,
												"nodeType": "Return",
												"src": "3927:12:2"
											}
										]
									},
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "3863:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "3874:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:2"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "3908:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:2"
									},
									"scope": 403,
									"src": "3850:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "4466:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 322,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "4483:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 323,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "4487:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 321,
												"id": 325,
												"nodeType": "Return",
												"src": "4476:12:2"
											}
										]
									},
									"documentation": {
										"id": 313,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "4412:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "4423:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:2"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "4457:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:2"
									},
									"scope": 403,
									"src": "4399:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "5084:106:2",
										"statements": [
											{
												"id": 350,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 340,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 332,
																		"src": "5126:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 341,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 330,
																		"src": "5131:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 343,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 334,
																	"src": "5134:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 339,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 345,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 348,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 346,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 330,
																"src": "5168:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 347,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 332,
																"src": "5172:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 338,
														"id": 349,
														"nodeType": "Return",
														"src": "5161:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "4981:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "5000:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "5019:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 333,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:2"
									},
									"returnParameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "5075:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:2"
									},
									"scope": 403,
									"src": "4959:231:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 376,
										"nodeType": "Block",
										"src": "5799:105:2",
										"statements": [
											{
												"id": 375,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 365,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 357,
																		"src": "5841:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 366,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 368,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 359,
																	"src": "5848:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 364,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 370,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 371,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "5882:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 372,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 357,
																"src": "5886:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 363,
														"id": 374,
														"nodeType": "Return",
														"src": "5875:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "5696:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "5715:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "5734:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 358,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:2"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "5790:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:2"
									},
									"scope": 403,
									"src": "5674:230:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "6675:105:2",
										"statements": [
											{
												"id": 400,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 390,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 382,
																		"src": "6717:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 393,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6724:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 389,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 395,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 396,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "6758:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 397,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 382,
																"src": "6762:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 388,
														"id": 399,
														"nodeType": "Return",
														"src": "6751:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 378,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "6572:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "6591:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "6610:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 383,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:2"
									},
									"returnParameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "6666:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:2"
									},
									"scope": 403,
									"src": "6550:230:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 404,
							"src": "482:6300:2",
							"usedErrors": []
						}
					],
					"src": "107:6676:2"
				},
				"id": 2
			}
		}
	}
}